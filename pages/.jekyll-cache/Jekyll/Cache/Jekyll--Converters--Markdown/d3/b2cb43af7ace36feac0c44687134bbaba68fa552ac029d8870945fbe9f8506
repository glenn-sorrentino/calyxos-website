I"·	<p>Decided to go with https://github.com/AndroidHardening/platform_packages_apps_Updater which is basically the previous implementation (CopperheadOS Updater) re-licensed to MIT.</p>

<h1 id="no-longer-current">No longer current</h1>

<h2 id="previous-implemenation">Previous Implemenation</h2>

<h3 id="copperheados-updater">CopperheadOS Updater</h3>
<p>Client: https://github.com/AndroidHardeningArchive/platform_packages_apps_Updater</p>

<p>Server: Any HTTP server + text file generated by https://github.com/AndroidHardeningArchive/script/blob/oreo-m2-s3-release/generate_metadata.py</p>

<p>Supports: Legacy + A/B</p>

<p>Pros:</p>
<ul>
  <li>Simple implementation</li>
  <li>Basically non-existent server side, just need a file.</li>
</ul>

<p>Cons:</p>
<ul>
  <li>Licensing :(</li>
</ul>

<h1 id="alternatives">Alternatives</h1>

<h3 id="lineageos-updater">LineageOS Updater</h3>
<p>Client: https://github.com/LineageOS/android_packages_apps_Updater</p>

<p>Server: https://github.com/lineageos-infra/updater (and mirrorbits + https://github.com/lineageos-infra/mirrorbits-api optionally)</p>

<p>Supports: Legacy + A/B</p>

<p>Pros:</p>
<ul>
  <li>Full fledged, feature rich updater</li>
</ul>

<p>Cons:</p>
<ul>
  <li>Complex implementation, even on the server side</li>
  <li>Would need to tweak the U/I to not show multiple updates</li>
</ul>

<h3 id="googles-sample-updater">Googleâ€™s Sample Updater</h3>
<p>Client: https://android.googlesource.com/platform/bootable/recovery/+/master/updater_sample/</p>

<p>Server: Any HTTP server + json file generated by https://android.googlesource.com/platform/bootable/recovery/+/master/updater_sample/tools/gen_update_config.py</p>

<p>Supports: A/B only</p>

<p>Pros:</p>
<ul>
  <li>Google provided implementation with multiple tests</li>
  <li>Basically non-existent server side, just need a file.</li>
</ul>

<p>Cons:</p>
<ul>
  <li>No legacy support, can be added but will take some effort + testing. Itâ€™s not that hard to install a legacy update, since thatâ€™s handled by recovery and all we need to do is point it to the file and reboot.</li>
  <li>Need to implement code to check for updates periodically and download/install it as desired (automatic / on certain networks / etc).</li>
  <li>Need to add support for multiple channels (stable/beta/etc) - but the json config file means it would be simple, a few lines of extra code.</li>
  <li>Need to make some U/I tweaks to disable extra options, easy enough.</li>
</ul>
:ET