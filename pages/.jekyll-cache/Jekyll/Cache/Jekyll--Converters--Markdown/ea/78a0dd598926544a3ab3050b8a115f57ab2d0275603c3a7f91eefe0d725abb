I"®<h1 id="no-longer-current">No longer current</h1>

<ul>
  <li>Will be going with Gitlab CI</li>
</ul>

<p>What to use for automating builds, signing (potentially offline, see below), and the entire release process.</p>

<h2 id="software">Software</h2>

<h3 id="jenkins">Jenkins</h3>
<p>Used by Lineage, so we can re-use some of their android build configuration</p>

<h3 id="gitlab-ci">GitLab CI</h3>
<p>I had this idea about having a changelog repo with GitLab CI configured.</p>

<p>Whenever there needs to be a new release, the changelog repo would be updated and that would trigger the build process.</p>

<p>We would likely want to self host gitlab in this case though, because otherwise it would mean that gitlab.com would get access to our infrastructure.</p>

<h3 id="what-else">What else?</h3>

<h2 id="steps">Steps</h2>

<h3 id="building">Building</h3>
<p>Fetch the latest stable source, build for all supported devices and also generate the files needed by the signing process.</p>

<p>Outputs target-files.zip and otatools.zip</p>

<p>Can also generate a changelog (something like <code class="language-plaintext highlighter-rouge">repo forall -c git log $oldtag..$newtag</code> or so on)</p>

<h3 id="signing">Signing</h3>
<p>Use the signing scripts to sign the builds with our private keys.</p>

<p>Outputs OTA updates, factory images, and the update metadata</p>

<p>Should be offline later, in which case this should be a simple script which can be executed by the automation server, so for the offline process the same script can be executed manually.</p>

<h3 id="release---tbd">Release - TBD</h3>
<p>Collect signed files, (update website?), post changelog, and put builds on the server.</p>
:ET