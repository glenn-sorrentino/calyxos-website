I"	<p>Chromium is the primary browser, and also responsible for providing WebView, a component used by many, many apps (more than you think!)</p>

<p>It has it’s own build system and is built separately.</p>

<p>CalyxOS usually tracks the Chrome Android stable release, you can see the latest version at <a href="https://omahaproxy.appspot.com/">https://omahaproxy.appspot.com/</a>.
Look for ‘stable’ under ‘android’ and ‘webview’ (usually the same)</p>

<p>Stable version at time of writing this: 91.0.4472.77</p>

<p><code class="language-plaintext highlighter-rouge">export V=91.0.4472.77 # Replace this with the correct version</code></p>

<h2 id="short-version">Short version</h2>
<ul>
  <li>This assumes you have a Chromium build environment already setup and have built it before</li>
</ul>

<p>Steps:</p>
<ol>
  <li>Fetch the tag and create a new branch from it.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">git fetch --tags $V &amp;&amp; git checkout -b calyxos-$V $V</code></li>
      <li><code class="language-plaintext highlighter-rouge">gclient sync -D</code></li>
    </ul>
  </li>
  <li>Fetch our patches and build configuration
    <ul>
      <li><code class="language-plaintext highlighter-rouge">git clone https://gitlab.com/CalyxOS/chromium-patches -b android11-qpr1</code></li>
    </ul>
  </li>
  <li>Apply patches (you version has to match the version in args.gn)
    <ul>
      <li><code class="language-plaintext highlighter-rouge">git am chromium-patches/*.patch</code></li>
    </ul>
  </li>
  <li>Setup build config
    <ul>
      <li><code class="language-plaintext highlighter-rouge">gn args out/Default</code></li>
      <li>You want to fill out the args from <code class="language-plaintext highlighter-rouge">chromium-patches/args.gn</code> now.</li>
      <li>You can also modify <code class="language-plaintext highlighter-rouge">target_cpu</code> if needed.</li>
      <li>You also need to modify the <code class="language-plaintext highlighter-rouge">trichrome_certdigest</code> which the digest from a java keystore you have.</li>
    </ul>
  </li>
  <li>Build
    <ul>
      <li><code class="language-plaintext highlighter-rouge">autoninja -C out/Default trichrome_chrome_64_32_apk trichrome_library_64_32_apk trichrome_webview_64_32_apk</code></li>
    </ul>
  </li>
  <li>Output
    <ul>
      <li><code class="language-plaintext highlighter-rouge">out/Default/apks/TrichromeLibrary6432.apk</code></li>
      <li><code class="language-plaintext highlighter-rouge">out/Default/apks/TrichromeWebView6432.apk</code></li>
      <li><code class="language-plaintext highlighter-rouge">out/Default/apks/TrichromeChrome6432.apk</code></li>
      <li>These will have to be signed, you can use <code class="language-plaintext highlighter-rouge">vendor/calyx/scripts/sign-trichrome.sh</code></li>
    </ul>
  </li>
  <li>Done
    <ul>
      <li>You can now copy them to <code class="language-plaintext highlighter-rouge">prebuilts/calyx/chromium/arm64/</code> for usage in the OS build.</li>
    </ul>
  </li>
</ol>
:ET